{"version":3,"sources":["./src/app/project/help/help.component.css","./src/app/project/help/help.component.html","./src/app/project/help/help.component.ts","./src/app/project/help/help.module.ts","./src/app/project/help/process-dialog/process-dialog.component.css","./src/app/project/help/process-dialog/process-dialog.component.html","./src/app/project/help/process-dialog/process-dialog.component.ts","./src/app/project/help/process-dialog/process-dialog.module.ts","./src/app/project/project.component.css","./src/app/project/project.component.html","./src/app/project/project.component.ts","./src/app/project/project.module.ts","./src/app/project/project.routing.ts","./src/app/project/project.service.ts"],"names":[],"mappings":"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","file":"project.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/help/help.component.css\n// module id = ./src/app/project/help/help.component.css\n// module chunks = project.module","module.exports = \"<button mat-fab color=\\\"primary\\\" (click)=\\\"openHelpDialog()\\\" matTooltip=\\\"Abrir ajuda\\\" matTooltipPosition=\\\"below\\\" >\\r\\n    <mat-icon>help</mat-icon>\\r\\n</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/help/help.component.html\n// module id = ./src/app/project/help/help.component.html\n// module chunks = project.module","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ProcessDialogComponent } from '@app/project/help/process-dialog/process-dialog.component';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  public openHelpDialog() {\n    const dialogRef = this.dialog.open(ProcessDialogComponent, {\n      height: '40vw',\n      width: '68vw',\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/help/help.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HelpComponent } from './help.component';\nimport { ProcessDialogModule } from '@app/project/help/process-dialog/process-dialog.module';\nimport { MatButtonModule, MatIconModule, MatDialogModule, MatTooltipModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatTooltipModule,\n    ProcessDialogModule\n  ],\n  declarations: [HelpComponent],\n  exports: [HelpComponent]\n})\nexport class HelpModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/help/help.module.ts","module.exports = \".infograph{\\r\\n    max-height: 28vw;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/help/process-dialog/process-dialog.component.css\n// module id = ./src/app/project/help/process-dialog/process-dialog.component.css\n// module chunks = project.module","module.exports = \"<div class=\\\"dom-dialog-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n  <h2 mat-dialog-title>\\n    Processo Projetual</h2>\\n</div>\\n<div class=\\\"dom-dialog-body\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mat-dialog-content>\\n    <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"center center\\\">\\n      <img src=\\\"assets/images/projetual.png\\\" class=\\\"infograph\\\">\\n    </div>\\n    <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"center center\\\">\\n      <section class=\\\"mat-typography\\\">\\n\\n        <p class=\\\"mat-body-1\\\">\\n          <strong>DOM</strong> Design, Objetos e Memórias é um processo projetual que proporciona ações reflexivas e dinâmicas para\\n          o desenvolvimento de projeto de produto. O Design Centrado no Utilizador é um dos princípios norteadores desse\\n          processo projetual. As etapas são interligadas e possibilitaram a retroalimentação. Para cada uma dessas etapas\\n          são sugeridas ações que podem ser desenvolvidas em paralelo e se possível através de um trabalho de colaboração\\n          em equipe.\\n        </p>\\n        <p>\\n          O itinerário está dividido em cinco etapas:\\n        </p>\\n        <ul>\\n          <li>\\n            <strong>Interação:</strong> compreender o contexto, conversar com usuários, pensar possibilidades e em oportunidades de design.\\n          </li>\\n          <li>\\n              <strong>Definição:</strong> elaborar ações, definir o caminho, relacionar informações, propor critérios, pensar em novas possibilidades.\\n          </li>\\n          <li>\\n              <strong>Criação:</strong> gerar ideias, estudar ideias, discutir ideias, desenvolver modelos.\\n          </li>\\n          <li>\\n              <strong>Avaliação:</strong> discutir o processo, avaliar critérios, ideias devem ser avaliadas juntos com usuários.\\n          </li>\\n          <li>\\n              <strong>Projetação:</strong> definir o produto realizar o detalhamento.\\n          </li>\\n        </ul>\\n      </section>\\n    </div>\\n  </div>\\n  <mat-dialog-actions fxLayoutAlign=\\\"end center\\\">\\n    <button mat-button mat-dialog-close>Fechar</button>\\n  </mat-dialog-actions>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/help/process-dialog/process-dialog.component.html\n// module id = ./src/app/project/help/process-dialog/process-dialog.component.html\n// module chunks = project.module","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-process-dialog',\n  templateUrl: './process-dialog.component.html',\n  styleUrls: ['./process-dialog.component.css']\n})\nexport class ProcessDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ProcessDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/help/process-dialog/process-dialog.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProcessDialogComponent } from './process-dialog.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule, MatButtonModule, MatDialogModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule\n  ],\n  declarations: [ProcessDialogComponent],\n  entryComponents: [ProcessDialogComponent],\n  exports: [ProcessDialogComponent]\n})\nexport class ProcessDialogModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/help/process-dialog/process-dialog.module.ts","module.exports = \".container {\\r\\n    \\r\\n    margin: 1%;\\r\\n}\\r\\n\\r\\n.float-position {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    margin: 2%;\\r\\n  }\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/project.component.css\n// module id = ./src/app/project/project.component.css\n// module chunks = project.module","module.exports = \"<div>\\n  <div fxLayout=\\\"row\\\">\\n    <mat-toolbar class=\\\"secondary-item\\\">\\n      <mat-toolbar-row fxLayout=\\\"row\\\">\\n        <div fxFlex=\\\"30\\\" fxLayoutAlign=\\\"start center\\\">\\n          {{projectTitle}}\\n        </div>\\n        <div fxFlex=\\\"70\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button mat-button (click)=\\\"goToPage('opportunity')\\\">\\n            <img src=\\\"assets/images/icons/ic_opportunity.png\\\" class=\\\"button-icon\\\">Oportunidade</button>\\n          <button mat-button (click)=\\\"goToPage('interaction')\\\">\\n            <img src=\\\"assets/images/icons/ic_interaction.png\\\" class=\\\"button-icon\\\">Interação</button>\\n          <button mat-button (click)=\\\"goToPage('redefinition')\\\">\\n            <img src=\\\"assets/images/icons/ic_concetration.png\\\" class=\\\"button-icon\\\">Concentração</button>\\n          <button mat-button>\\n            <img src=\\\"assets/images/icons/ic_creation.png\\\" class=\\\"button-icon\\\">Criação</button>\\n          <button mat-button>\\n            <img src=\\\"assets/images/icons/ic_evaluation.png\\\" class=\\\"button-icon\\\">Avaliação</button>\\n          <button mat-button>\\n            <img src=\\\"assets/images/icons/ic_projection.png\\\" class=\\\"button-icon\\\">Projetação</button>\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"container\\\" *ngIf=\\\"!isLoading;else loadingView \\\">\\n    \\n        <router-outlet></router-outlet>\\n      <app-help class=\\\"float-position\\\"></app-help>\\n  </div>\\n\\n  <ng-template #loadingView>\\n    <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n  </ng-template>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/project.component.html\n// module id = ./src/app/project/project.component.html\n// module chunks = project.module","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Project } from '@app/model/project.model';\nimport { ProjectService } from './project.service';\nimport { ProjectParser } from '@app/model/parser/project.parser';\nimport { SessionService } from '@app/session.service';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit, AfterViewInit {\n  public project: Project;\n  public projectTitle = 'Project';\n  public isLoading = false;\n\n  constructor(\n    protected router: Router,\n    protected sessionService: SessionService,\n    protected projectService: ProjectService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n\n    this.sessionService.getProjects().subscribe(\n      result => {\n        result = result.filter(x => x.title === 'Molde API');\n        this.project = ProjectParser.parse(result[0]);\n        this.sessionService.setSelectedProject(this.project);\n        this.projectTitle = this.project.title;\n        console.log(this.project, this.projectTitle);\n      },\n      error => {\n        console.log('Error ' + error);\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngAfterViewInit(): void {}\n\n  public goToPage(subroute: String) {\n    this.router.navigate([`/${subroute}`]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/project.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectComponent } from './project.component';\nimport { projectRouting } from './project.routing';\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatButtonModule,\n  MatIconModule,\n  MatProgressSpinnerModule\n} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { DomApiModule } from '@app/util/dom-api/dom-api.module';\nimport { ProjectService } from '@app/project/project.service';\nimport { HelpModule } from '@app/project/help/help.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    RouterModule,\n    FlexLayoutModule,\n    HelpModule,\n    DomApiModule,\n    projectRouting\n  ],\n  providers: [ProjectService],\n  declarations: [ProjectComponent]\n})\nexport class ProjectModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/project.module.ts","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { ProjectComponent } from './project.component';\r\n\r\n\r\nconst projectRoutes: Routes = [\r\n    { path: '', component: ProjectComponent, children: [\r\n        {path: 'opportunity', loadChildren: 'app/project/opportunity/opportunity.module#OpportunityModule'},\r\n        {path: 'interaction', loadChildren: 'app/project/interaction/interaction.module#InteractionModule'},\r\n        {path: 'redefinition', loadChildren: 'app/project/redefinition/redefinition.module#RedefinitionModule'},\r\n    ] }\r\n];\r\n\r\nexport const projectRouting: ModuleWithProviders = RouterModule.forChild(projectRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/project.routing.ts","import { Injectable } from '@angular/core';\nimport { DomApiService } from '@app/util/dom-api/dom-api.service';\nimport { ReadOnlyUtil } from '@app/util/read-only-util';\nimport { Project } from '@app/model/project.model';\nimport { ProjectParser } from '@app/model/parser/project.parser';\n\n@Injectable()\nexport class ProjectService {\n  constructor(protected domApi: DomApiService) {}\n\n  public getProjects() {\n    return this.domApi.get(\n      `${ReadOnlyUtil.RequestPaths.SERVER_ROOT}/${\n        ReadOnlyUtil.RequestPaths.PROJECT\n      }`\n    );\n  }\n\n  public updateProject(project: Project) {\n    return this.domApi.patch(\n      `${ReadOnlyUtil.RequestPaths.SERVER_ROOT}/${\n        ReadOnlyUtil.RequestPaths.PROJECT\n      }/${project.id}`,\n      ProjectParser.parseToJson(project)\n    );\n  }\n\n  public getProjectById(id: string) {\n    return this.domApi.get(\n      `${ReadOnlyUtil.RequestPaths.SERVER_ROOT}/${\n        ReadOnlyUtil.RequestPaths.PROJECT\n      }/${id}`\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/project.service.ts"],"sourceRoot":"webpack:///"}